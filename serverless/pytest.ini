[pytest]
env =
    PROVIDER_URL = https://provider-url.com
    PROVIDER_API_KEY=123-fake-provider-api-key
    DEBUG=FALSE
    QUEUE_MARKET_URL=https://sqs.us-east-1.amazonaws.com/123456789012/market.fifo
    AUTH0_OAUTH_URL = https://fake-url.com/oauth/token
    SOURCE_PORTFOLIO_ID = d3e0e5a0-9b8b-4d1e-8e1b-9f4a1c6b5b6c
    TARGET_PORTFOLIO_ID = target-portfolio-id
    PORTFOLIO_BALANCE_BUY_THRESHOLD = 0.1
    PORTFOLIO_BALANCE_SELL_THRESHOLD = 0.1
    CACHE_TABLE_NAME = cache
    REGION = us-east-1
    QUEUE_RISK_URL = https://sqs.us-east-1.amazonaws.com/123456789012/risk.fifo

log_format = %(asctime)s %(levelname)s %(message)s
markers =
    unit_tests: marks tests as a unit test
    functional_tests: marks tests as a functional test
    unit_tests_analyze: markts tests as unit tests for analyze handler
    unit_tests_market: markts tests as unit tests for market handler
    unit_tests_orders: markts tests as unit tests for orders handler
    unit_tests_config: markts tests as unit tests for config handler
    unit_tests_products: markts tests as unit tests for products handler
    unit_tests_oauth: markts tests as unit tests for oauth handler
    unit_tests_scheduler: markts tests as unit tests for scheduler handler
    unit_tests_profits: markts tests as unit tests for profits handler
    unit_tests_assets: markts tests as unit tests for assets handler
    functional_tests_prices: markts tests as functional tests for prices handler
    functional_tests_products: markts tests as functional tests for products handler
    functional_tests_analyze: markts tests as functional tests for analyze handler
    functional_tests_market: markts tests as functional tests for market handler
    sell_flow: markts tests as a sell flow test
    buy_flow: markts tests as a buy flow test
    success: markts tests as a success test
    simulated: markts tests as a simulated test
    backtest: markts tests as a backtest test
